name: Update ITV M3U

on:
  schedule:
    - cron: '0 */12 * * *'  # 每12小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  update_itv_m3u:
    runs-on: ubuntu-latest
    environment: itv

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download pixman content
        run: |
          SERVER_URL="${{ secrets.SERVER_ADDRESS }}"
          curl -L -o itv.m3u ${SERVER_URL}/itv.m3u    # 直接使用frp不再使用cf url转发
          curl -L -o 4gtv.m3u ${{ secrets.SERVER_ADDRESS }}/4gtv.m3u   
      - name: Check for #EXTM3U in itv.m3u
        run: |
          if ! grep -q '^#EXTM3U' itv.m3u; then
            echo "File does not contain #EXTM3U, exiting..."
            curl "${{ secrets.BARK_SERVER }}/github_actions/itv更新失败!Frp服务已停止，等待重新拉起服务.?isArchive=1"
            exit 1
          fi
      - name: Process itv.m3u file
        run: |
          input_file="itv.m3u"
          output_file="processed_itv.m3u"
          temp_file="tmp_file.m3u8"

          # 1. 使用 cat 命令去除空行写入临时文件
          grep -v '^$' $input_file > "$temp_file"

          # 2. 将时间戳覆盖到 output 文件，修改epg源
          # echo "# $(TZ='Asia/Shanghai' date)" > "$output_file"

          # 3. 使用 awk 将包含 EXTM3U 的行追加到 output 文件，并在临时文件中删除
          # awk '/EXTM3U/ {print $0; next} 1' "$temp_file" > "$temp_file.tmp" && mv "$temp_file.tmp" "$temp_file"
          awk '/EXTM3U/ {print $0;}' "$temp_file" > "$output_file"
          sed -i 's|^#EXTM3U x-tvg-url="[^"]*"|#EXTM3U x-tvg-url="https://live.fanmingming.com/e.xml"|' "$output_file"
          echo "# $(TZ='Asia/Shanghai' date)" >> "$output_file"
          echo "" >> "$output_file"
          sed -i '/EXTM3U/d' "$temp_file"

          # 4. 使用 awk 将包含 HEVC 的行及其下一行追加到 output 文件，并在临时文件中删除
          # awk '/HEVC/ {print $0; getline; print $0; next} 1' "$temp_file" > "$temp_file.tmp" && mv "$temp_file.tmp" "$temp_file"
          awk '/HEVC/ {print $0; getline; print $0; print ""}' "$temp_file" >> "$output_file"
          sed -i '/HEVC/,+1d' "$temp_file"

          # 5. 使用 awk 将包含 FPS 的行及其下一行追加到 output 文件，并在临时文件中删除
          # awk '/FPS/ {print $0; getline; print $0; next} 1' "$temp_file" > "$temp_file.tmp" && mv "$temp_file.tmp" "$temp_file"
          awk '/FPS/ {print $0; getline; print $0;print ""}' "$temp_file" >> "$output_file"
          sed -i '/FPS/,+1d' "$temp_file"

          # 6. 将临时文件中剩余的内容追加到 output 文件
          cat "$temp_file" >> "$output_file"

          # 7. 追加台湾频道
          # sed '1d' "output/taiwan_gat.m3u" >> "$output_file"
          # echo '#EXTM3U x-tvg-url="https://assets.livednow.com/epg.xml"' >>$output_file
          # grep -v '#EXTM3U' 4gtv.m3u | sed -E "s|(https?://)[^/]*|\1tv.wangqifei.eu.org|g" >> "$output_file"

          grep -v '^#EXTM3U$' 4gtv.m3u >> $output_file

          # 8. 追加香港、增加动画
          # awk '/凤凰|星空|CHANNEL-V/ {print $0; getline; print $0;print ""}' "multicastSource/SiChuan_telecom_333.m3u" >> "$output_file"

          cat <<EOL >> "$output_file"
          #EXTINF:-1 tvg-name="" group-title="香港",香港卫视
          http://zhibo.hkstv.tv/livestream/mutfysrq/playlist.m3u8
          EOL

          sed -nE '/香港|星空$|凤凰|channel-?v/I{p;n;p}' ./multicastSource/SiChuan_telecom_333.m3u | awk '!seen[$2]++' RS='#EXTINF' ORS='#EXTINF' | sed 's/group-title="[^"]*"/group-title="香港"/g' >> "$output_file"

          # 8. 增加香港频道
          ## curl -L -o sichuan_hongkong.tmp https://raw.githubusercontent.com/fqw000/iptv/refs/heads/main/multicastSource/SiChuan_telecom_333.txt
          #curl -L -o sichuan_hongkong.tmp https://raw.githubusercontent.com/fqw000/iptv/refs/heads/main/output/sichuan_telecom_hotle_foodieguide.txt
          #sed -i '/凤凰|CHANNEL-V|CHANNELV|星空/,+1d' "$output_file"
          #awk '/凤凰|CHANNEL-V|CHANNELV|星空(?!精选)/ {print $0;}' "sichuan_hongkong.tmp" | sort -t ',' -k 1,1 -u > "./hongkong.tmp"
          #sort "./hongkong.tmp" | uniq > "./hongkong.tmp.tmp" | mv "./hongkong.tmp.tmp" "./hongkong.tmp"
          #echo '============== hongkong.tmp ============='
          #cat "./hongkong.tmp"
          #bash ../rtp2m3u.sh "./hongkong.tmp"
          #echo "========= hongkong.m3u =========="
          #cat "./hongkong.m3u"
          #sed -i '/凤凰\|CHANNEL-V\|星空\|CHANNELV/ s/group-title="[^"]*"/group-title="香港"/g' "./hongkong.m3u"
          #cat "./hongkong.m3u" >> "$output_file"
          #rm "sichuan_hongkong.tmp" "./hongkong.tmp" "./hongkong.m3u"


          # # 增加 TMDB-To-VOD-Playlist/
          # curl -L -o tmdbtovod.tmp https://mirror.ghproxy.com/github.com/fqw000/TMDB-To-VOD-Playlist/blob/main/channels/m3u_formatted.dat?raw=1
          # # sed -i '' 's/group-title="[^"]*"/group-title="国外"/g' tmdbtovod.tmp
          # cat tmdbtovod.tmp >> "$output_file"
          # rm tmdbtovod.tmp

          # 增加moveonjoy
          grep -v 'EXTM3U' MoveOnJoy.m3u >> "$output_file"

          # 9. 整理 动画 频道
          # Step 1: Capture the lines with specified keywords and the next line, modify group-title, and append to a temporary file
          echo "" > temp.txt
          sed -n '/CCTV 14 HEVC\|少儿\|儿童\|哆啦A梦\|HakkaTV\|超人\|卡通\|nickjr\|Nickelodeon\|动画\|动漫\|動畫\|動漫/{N;s/\(group-title="\)[^"]*/\1动画/;p;}' "$output_file" > temp.txt
          # Step 2: Append the modified content to the end of "$output_file"
          cat temp.txt >> "$output_file"
          # Step 3: Clean up the temporary file
          rm temp.txt

          # 10. 英语频道
          echo "" > temp.txt
          sed -n '/英語\|英语\|VOA/{N;s/\(group-title="\)[^"]*/\1英语/;p;}' "$output_file" > temp.txt
          cat temp.txt >> "$output_file"
          rm temp.txt

          # 多个空格转为1个空格,多个空行合并为一个空行
          sed 's/ \+/ /g' "$output_file" | sed -n l 
          sed -i '/^$/N;/^\n$/D' "$output_file"
          # sed -i '/^$/d‘ "$output_file"
          # Remove temporary files
          rm "$temp_file"
          mv processed_itv.m3u itv.m3u

          

      - name: bark
        run: |
          cd $GITHUB_WORKSPACE
          printf "=========== itv palylist ===========\n" > msg.txt
          printf " 更新时间：$(TZ='Asia/Shanghai' date +%Y/%m/%d/%H:%M:%S)\n" >> msg.txt
          printf " 本次更新频道数量： $(grep -c "://" ./itv.m3u | awk '{printf "%d", $1-1})" >> msg.txt
          msg_urlencode=$(bash ./url_process/encode.sh  "$(cat msg.txt)")
          curl "${{ secrets.BARK_SERVER }}/github_actions/${msg_urlencode}?isArchive=1"
          rm -f msg.txt
        
      - name: Stage changes
        run: |
          echo "Staging changes..."
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          # mv processed_itv.m3u itv.m3u  # Replace the original file with the processed file
          git add itv.m3u
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update itv.m3u with timestamp"
          branch: main  # Commit to the main branch
